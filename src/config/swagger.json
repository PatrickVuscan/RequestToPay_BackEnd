{
  "swagger": "2.0",
  "info": {
    "title": "RequestToPay",
    "description": "This API is meant to provide data for a demo of Scotia Bank's potential data rich payment on delivery system. Note that using https on locally hosted server will fail and the opposite on a heroku instance.",
    "license": {
      "name": "LicenseUndecided",
      "url": ""
    },
    "version": "1.0.0"
  },
  "basePath": "/api/v1",
  "schemes": ["http", "https"],
  "produces": ["application/json"],
  "tags": [
    {
      "name": "User Endpoints",
      "description": "This is where to get information about the users from the database."
    }
  ],
  "paths": {
    "/login": {
      "get": {
        "tags": ["User Endpoints"],
        "summary": "Returns user information if user exists in database with given password.",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad request"
          }
        },
        "parameters": [
          {
            "name": "user",
            "in": "query",
            "description": "Specifies the username",
            "required": true,
            "type": "string"
          },
          {
            "name": "pass",
            "in": "query",
            "description": "Specifies the password",
            "required": true,
            "type": "string"
          }
        ]
      }
    },
    "/users": {
      "get": {
        "tags": ["User Endpoints"],
        "summary": "Returns user information if user exists in database.",
        "responses": {
          "200": {
            "description": "OK"
          },
          "400": {
            "description": "Bad request"
          }
        },
        "parameters": [
          {
            "name": "user",
            "in": "query",
            "description": "Specifies the username",
            "required": true,
            "type": "string"
          }
        ]
      }
    },
    "/invoice": {
      "get":  {
        "tags": ["Invoice Endpoints"],
        "summary": "Returns an invoice with the matching InID",
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "No invoices found"
          },
          "400": {
            "description": "Bad request or multiple invoices found"
          }
        },
        "parameters": [
          {
            "name": "InID",
            "in": "query",
            "description": "Specifies the invoice ID",
            "required": true,
            "type": "integer"
          }
        ]
      },
      "put": {
        "tags": ["Invoice Endpoints"],
        "summary": "Inserts a new invoice into the database.",
        "responses": {
          "200": {
            "description": "This is the ID of the newly created invoice."
          }
        },
        "parameters": [
          {
            "name": "DeliveryDate",
            "in": "query",
            "description": "The date for the new invoice to be delivered on.",
            "required": true,
            "type": "string"
          }
        ]
      }
    },
    "/entityInvoices": {
      "get":  {
        "tags": ["Invoice Endpoints"],
        "summary": "Returns all invoices with the matching Entity ID.",
        "responses": {
          "200": {
            "description": "OK"
          },
          "404": {
            "description": "No invoices found"
          }
        },
        "parameters": [
          {
            "name": "EID",
            "in": "query",
            "description": "Specifies the Entity ID",
            "required": true,
            "type": "integer"
          }
        ]
      }
    }
  }
}
